stages:
  - test
  - build
  - tag
  - publish
  - release

services:
  - docker:19-dind
variables:
  CI_VERSION: "1.0.${CI_JOB_ID}"

default:
  before_script:
    - apk add --no-cache make

test:
  image: docker:20.10-dind
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH # Run job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH                              # Run job in pipelines on the master branch (but not in other branch pipelines)
  script:
    - make docker-test

build:
  image: docker:20.10-dind
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH # Run job in merge request pipelines
  script:
    - make docker-build VERSION=$CI_VERSION

tag:
  stage: tag
  image: alpine:3.13.2
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                 # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Run this job when commits are pushed or merged to the default branch
  before_script:
    - apk add --no-cache curl
  script:
    - TAG="v${CI_VERSION}"
    - echo TAG=$TAG
    - echo "TAG=$TAG" >> variables.env # Tag is created indirectly in release stage, it can be created via API https://docs.gitlab.com/ee/api/tags.html too
  artifacts:
    reports:
      dotenv: variables.env

publish:
  image: docker:20.10-dind
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Run this job when commits are pushed or merged to the default branch
  script:
    - make docker-release
  artifacts:
    paths:
      - release/

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  needs:
    - job: publish
      artifacts: true
    - job: tag
      artifacts: true
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Uploading binaries to project package"
    - PACKAGE_URL=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic
    - 'curl -H "JOB-TOKEN: ${CI_JOB_TOKEN}" -T "release/main" "${PACKAGE_URL}/${CI_PROJECT_NAME}-gitlab-fundamentals/${TAG}/main"'
    - echo "Creating Release for $TAG"
    - |
      release-cli create \
        --name "Release $TAG" --description "Created by Gitlab CI" --tag-name "$TAG" --ref $CI_COMMIT_SHA \
        --assets-link "{\"name\":\"main\",\"url\":\"${PACKAGE_URL}/${CI_PROJECT_NAME}-gitlab-fundamentals/${TAG}/main\"}" \
